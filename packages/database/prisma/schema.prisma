// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  GUIDE
  ADMIN
}

enum BookingStatus {
  WAITING_FOR_GUIDE_CONFIRMATION
  GUIDE_CANCELLED
  WAITING_FOR_PAYMENT
  WAITING_FOR_REFUND
  WAITING_FOR_TRAVELING
  TRAVELING
  FINISHED
  USER_CANCELLED
}

model User {
  id             Int       @id @default(autoincrement())
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  email          String    @unique
  username       String    @unique
  hashedPassword String
  firstName      String
  lastName       String
  role           Role      @default(USER)
  guide          Guide?
  review         Review[]
  posts          Post[]
  bookings        Booking[]
  transactions    Transaction[]
}

model Guide {
  id          Int    @id @default(autoincrement())
  userId      Int    @unique
  certificate String
  paymentId   String

  user      User        @relation(fields: [userId], references: [id])
  locations  Location[]
  tourStyles TourStyle[]
  reviews    Review[]
  Bookings   Booking[]
}

model Location {
  id           Int    @id @default(autoincrement())
  locationName String
  guideId      Int

  guide Guide @relation(fields: [guideId], references: [id])
}

model TourStyle {
  id            Int    @id @default(autoincrement())
  tourStyleName String
  guideId       Int

  guide Guide @relation(fields: [guideId], references: [id])
}

model Review {
  id          Int      @id @default(autoincrement())
  publishDate DateTime
  score       Decimal  @db.Decimal(2, 1)
  text        String?
  reviewerId  Int
  guideId     Int

  reviewer User  @relation(fields: [reviewerId], references: [id])
  guide    Guide @relation(fields: [guideId], references: [id])
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String
  content   String?
  authorId  Int
  tags      String[]
  fee       Decimal  @db.Decimal(10, 2)

  author  User      @relation(fields: [authorId], references: [id])
  bookings Booking[]
}

model Booking {
  id            Int           @id @default(autoincrement())
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  startDate     DateTime
  endDate       DateTime
  bookingStatus BookingStatus @default(WAITING_FOR_GUIDE_CONFIRMATION)
  postId        Int
  userId        Int
  guideId       Int

  post  Post  @relation(fields: [postId], references: [id])
  user  User  @relation(fields: [userId], references: [id])
  guide Guide @relation(fields: [guideId], references: [id])
  transactions Transaction[]
}

model Transaction {
  id        Int      @ id @ default(autoincrement())
  createdAt DateTime @ default(now())
  updatedAt DateTime @ updatedAt
  paymentID String
  bookingId Int
  userId    Int

  booking Booking @ relation(fields: [bookingId], references: [id])
  user User @ relation(fields: [userId], references: [id])
}