FROM node:alpine AS base
RUN apk add --no-cache libc6-compat
RUN apk update

RUN npm i -g pnpm@7.30.5

WORKDIR /app

FROM base AS pruner
RUN pnpm i turbo@1.7.0
COPY . .
RUN pnpm turbo prune --scope=frontend --docker --out-dir prune/frontend

FROM base AS builder
COPY --from=pruner /app/prune/frontend/json/ .
COPY --from=pruner /app/prune/frontend/pnpm-lock.yaml ./pnpm-lock.yaml
RUN pnpm install --frozen-lockfile

COPY --from=pruner /app/prune/frontend/full/ .
RUN pnpm install --frozen-lockfile
RUN pnpm run build
RUN pnpm pkg set scripts.prepare="echo no-prepare"
RUN pnpm prune --prod
RUN cd apps/frontend && pnpm prune --prod && cd ../..

FROM base AS deploy

ENV NODE_ENV production
ENV NEXT_TELEMETRY_DISABLED 1

RUN addgroup --system --gid 1001 container
RUN adduser --system --uid 1001 user
USER user

COPY --from=builder --chown=user:container /app/package.json /app/package.json
COPY --from=builder --chown=user:container /app/node_modules /app/node_modules
COPY --from=builder --chown=user:container /app/pnpm-workspace.yaml /app/pnpm-workspace.yaml

COPY --from=builder --chown=user:container /app/apps/frontend/package.json /app/apps/frontend/package.json
COPY --from=builder --chown=user:container /app/apps/frontend/node_modules /app/apps/frontend/node_modules
COPY --from=builder --chown=user:container /app/apps/frontend/.next /app/apps/frontend/.next
COPY --from=builder --chown=user:container /app/apps/frontend/public /app/apps/frontend/public

CMD pnpm --filter frontend start
